function ClearPiece(e){let a,r=GameBoard.pieces[e],o=PieceCol[r],P=-1;for(HASH_PCE(r,e),GameBoard.pieces[e]=PIECES.EMPTY,GameBoard.material[o]-=PieceVal[r],a=0;a<GameBoard.pceNum[r];++a)if(GameBoard.pList[PCEINDEX(r,a)]==e){P=a;break}GameBoard.pceNum[r]--,GameBoard.pList[PCEINDEX(r,P)]=GameBoard.pList[PCEINDEX(r,GameBoard.pceNum[r])]}function AddPiece(e,a){let r=PieceCol[a];HASH_PCE(a,e),GameBoard.pieces[e]=a,GameBoard.material[r]+=PieceVal[a],GameBoard.pList[PCEINDEX(a,GameBoard.pceNum[a])]=e,GameBoard.pceNum[a]++}function MovePiece(e,a){let r=0,o=GameBoard.pieces[e];for(HASH_PCE(o,e),GameBoard.pieces[e]=PIECES.EMPTY,HASH_PCE(o,a),GameBoard.pieces[a]=o,r=0;r<GameBoard.pceNum[o];++r)if(GameBoard.pList[PCEINDEX(o,r)]==e){GameBoard.pList[PCEINDEX(o,r)]=a;break}}function MakeMove(e){let a=FROMSQ(e),r=TOSQ(e),o=GameBoard.side;if(GameBoard.history[GameBoard.hisPly].posKey=GameBoard.posKey,0!=(e&MFLAGEP))o==COLOURS.WHITE?ClearPiece(r-10):ClearPiece(r+10);else if(0!=(e&MFLAGCA))switch(r){case SQUARES.C1:MovePiece(SQUARES.A1,SQUARES.D1);break;case SQUARES.C8:MovePiece(SQUARES.A8,SQUARES.D8);break;case SQUARES.G1:MovePiece(SQUARES.H1,SQUARES.F1);break;case SQUARES.G8:MovePiece(SQUARES.H8,SQUARES.F8)}GameBoard.enPas!=SQUARES.NO_SQ&&HASH_EP(),HASH_CA(),GameBoard.history[GameBoard.hisPly].move=e,GameBoard.history[GameBoard.hisPly].fiftyMove=GameBoard.fiftyMove,GameBoard.history[GameBoard.hisPly].enPas=GameBoard.enPas,GameBoard.history[GameBoard.hisPly].castlePerm=GameBoard.castlePerm,GameBoard.castlePerm&=CastlePerm[a],GameBoard.castlePerm&=CastlePerm[r],GameBoard.enPas=SQUARES.NO_SQ,HASH_CA();let P=CAPTURED(e);GameBoard.fiftyMove++,P!=PIECES.EMPTY&&(ClearPiece(r),GameBoard.fiftyMove=0),GameBoard.hisPly++,GameBoard.ply++,PiecePawn[GameBoard.pieces[a]]==BOOL.TRUE&&(GameBoard.fiftyMove=0,0!=(e&MFLAGPS)&&(o==COLOURS.WHITE?GameBoard.enPas=a+10:GameBoard.enPas=a-10,HASH_EP())),MovePiece(a,r);let S=PROMOTED(e);return S!=PIECES.EMPTY&&(ClearPiece(r),AddPiece(r,S)),GameBoard.side^=1,HASH_SIDE(),SqAttacked(GameBoard.pList[PCEINDEX(Kings[o],0)],GameBoard.side)?(TakeMove(),BOOL.FALSE):BOOL.TRUE}function TakeMove(){GameBoard.hisPly--,GameBoard.ply--;let e=GameBoard.history[GameBoard.hisPly].move,a=FROMSQ(e),r=TOSQ(e);if(GameBoard.enPas!=SQUARES.NO_SQ&&HASH_EP(),HASH_CA(),GameBoard.castlePerm=GameBoard.history[GameBoard.hisPly].castlePerm,GameBoard.fiftyMove=GameBoard.history[GameBoard.hisPly].fiftyMove,GameBoard.enPas=GameBoard.history[GameBoard.hisPly].enPas,GameBoard.enPas!=SQUARES.NO_SQ&&HASH_EP(),HASH_CA(),GameBoard.side^=1,HASH_SIDE(),0!=(MFLAGEP&e))GameBoard.side==COLOURS.WHITE?AddPiece(r-10,PIECES.bP):AddPiece(r+10,PIECES.wP);else if(0!=(MFLAGCA&e))switch(r){case SQUARES.C1:MovePiece(SQUARES.D1,SQUARES.A1);break;case SQUARES.C8:MovePiece(SQUARES.D8,SQUARES.A8);break;case SQUARES.G1:MovePiece(SQUARES.F1,SQUARES.H1);break;case SQUARES.G8:MovePiece(SQUARES.F8,SQUARES.H8)}MovePiece(r,a);let o=CAPTURED(e);o!=PIECES.EMPTY&&AddPiece(r,o),PROMOTED(e)!=PIECES.EMPTY&&(ClearPiece(a),AddPiece(a,PieceCol[PROMOTED(e)]==COLOURS.WHITE?PIECES.wP:PIECES.bP))}